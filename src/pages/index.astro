---
// src/pages/index.astro
import Layout from '../layouts/Layout.astro';
import MovieCard from '../components/MovieCard.tsx';
import TrendingWidget from '../components/TrendingWidget.svelte';
import StatsWidget from '../components/StatsWidget.tsx';
import TopRatedCarrousel from '../components/TopRatedCarrousel.vue';
import FrameworksDesc from '../components/FrameworksDesc.astro';
import { tmdbApi } from '../lib/tmdb';

// Fetch data at build time (SSG)
const [popularMoviesResponse, popularTVResponse] = await Promise.all([
  tmdbApi.getPopularMovies(),
  tmdbApi.getPopularTVShows(),
]);

const popularMovies = popularMoviesResponse.results.slice(0, 6);
const popularTVShows = popularTVResponse.results.slice(0, 6);
---

<Layout title="MovieDash - Dashboard de Pel√≠culas y Series">
  <!-- Hero Section -->
  <section
    class="bg-gradient-to-r from-primary-900 via-purple-900 to-blue-900 rounded-lg p-8 mb-8 text-center"
  >
    <h1 class="text-4xl md:text-6xl font-bold text-white mb-4">
      Wobbly Seat üòµüí∫
    </h1>
    <p class="text-xl text-gray-200 mb-6">
      Usa la barra de b√∫squeda arriba para descubrir nuevas pel√≠culas y series
    </p>
  </section>

  <!-- Framework Demonstrations Grid -->
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
    <!-- Mensaje sobre la b√∫squeda -->
    <div
      class="bg-gradient-to-br from-blue-900 to-purple-900 p-6 rounded-lg shadow-lg"
    >
      <h2 class="text-2xl font-bold mb-4 text-blue-300">üîç B√∫squeda R√°pida</h2>
      <div class="space-y-4">
        <p class="text-gray-200">
          La barra de b√∫squeda en el header te permite encontrar r√°pidamente
          pel√≠culas y series.
        </p>
        <div class="bg-black bg-opacity-30 p-4 rounded-lg">
          <h3 class="text-lg font-semibold text-blue-400 mb-2">Funciones:</h3>
          <ul class="text-sm text-gray-300 space-y-1">
            <li>
              ‚Ä¢ <strong>B√∫squeda instant√°nea</strong> con resultados en tiempo real
            </li>
            <li>
              ‚Ä¢ <strong>Filtros por tipo</strong>: pel√≠culas üé¨ o series üì∫
            </li>
            <li>
              ‚Ä¢ <strong>Agregar a watchlist</strong> directamente desde los resultados
            </li>
            <li>‚Ä¢ <strong>Vista previa</strong> con ratings y a√±os</li>
          </ul>
        </div>
        <div class="text-center">
          <div
            class="inline-flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-lg"
          >
            <span>Prueba buscar "Marvel" o "Game of Thrones"</span>
            <span>‚Üó</span>
          </div>
        </div>
      </div>
    </div>

    <!-- Componente de estad√≠sticas -->
    <StatsWidget client:load />
  </div>

  <!-- Svelte Component - Trending Carousel -->
  <div class="mb-8">
    <TrendingWidget client:load />
  </div>

  <!-- Vue Component - Top Rated Carousel -->
  <div class="mb-8" id="top-rated">
    <TopRatedCarrousel client:load />
  </div>

  <!-- Static Content with React Components -->
  <section class="mb-8">
    <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
      <h2 class="text-2xl font-bold mb-6 text-primary-400">
        üî• Pel√≠culas Populares (React Components)
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          popularMovies.map((movie) => (
            <MovieCard item={movie} type="movie" client:visible />
          ))
        }
      </div>
    </div>
  </section>

  <section class="mb-8">
    <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
      <h2 class="text-2xl font-bold mb-6 text-primary-400">
        üî• Series Populares (React Components)
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          popularTVShows.map((show) => (
            <MovieCard item={show} type="tv" client:visible />
          ))
        }
      </div>
    </div>
  </section>

  <!-- Call to Action para Watchlist -->
  <section class="mb-8">
    <div
      class="bg-gradient-to-r from-green-800 to-teal-800 p-6 rounded-lg shadow-lg text-center"
    >
      <h2 class="text-2xl font-bold mb-4 text-white">
        ¬øAgregaste algo a tu Watchlist?
      </h2>
      <p class="text-green-200 mb-6">
        Organiza tus pel√≠culas y series pendientes con prioridades y notas
      </p>
      <a
        href="/watchlist"
        class="bg-white text-green-800 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors inline-flex items-center gap-2"
      >
        Ver Mi Watchlist
      </a>
    </div>
  </section>

  <!-- Framework Comparison Section -->
  <section class="mb-8">
    <FrameworksDesc />
  </section>
</Layout>

<script>
  // Declare global window property
  declare global {
    interface Window {
      watchlistStore: any;
    }
  }

  // Cargar el store de watchlist
  import('../lib/watchlistStore')
    .then(({ watchlistStore, WatchlistEvents }) => {
      console.log('Homepage: Store loaded');
      WatchlistEvents.setupGlobalListeners();
      window.watchlistStore = watchlistStore;
      console.log('Homepage ready');
    })
    .catch((error) => {
      console.error('Error loading watchlist store:', error);
    });
</script>
