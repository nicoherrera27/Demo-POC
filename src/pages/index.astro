---
import Layout from '../layouts/Layout.astro';
import MovieCard from '../components/MovieCard.tsx';
import TrendingWidget from '../components/TrendingWidget.svelte';
import StatsWidget from '../components/StatsWidget.tsx';
import TopRatedCarrousel from '../components/TopRatedCarrousel.vue';
import FrameworksDesc from '../components/FrameworksDesc.astro';
import { tmdbApi } from '../lib/tmdb';

const [popularMoviesResponse, popularTVResponse] = await Promise.all([
  tmdbApi.getPopularMovies(),
  tmdbApi.getPopularTVShows(),
]);

const popularMovies = popularMoviesResponse.results.slice(0, 6);
const popularTVShows = popularTVResponse.results.slice(0, 6);
---

<Layout title="MovieDash - Dashboard de PelÃ­culas y Series">
  <div
    class="bg-gradient-to-r from-primary-900 via-purple-900 to-blue-900 rounded-lg p-8 mb-8 text-center"
  >
    <h1 class="text-4xl md:text-6xl font-bold text-white mb-4">
      Wobbly Seat ðŸ˜µðŸ’º
    </h1>
    <p class="text-xl text-gray-200 mb-6">
      Usa la barra de bÃºsqueda arriba para descubrir nuevas pelÃ­culas y series
    </p>
  </div>

  <div class="mb-8">
    <StatsWidget client:load />
  </div>

  <div class="mb-8">
    <TrendingWidget client:load />
  </div>

  <div class="mb-8" id="top-rated">
    <TopRatedCarrousel client:load />
  </div>

  <div class="mb-8">
    <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
      <h2 class="text-2xl font-bold mb-6 text-primary-400">
        ðŸ”¥ PelÃ­culas Populares (React Components)
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          popularMovies.map((movie) => (
            <MovieCard item={movie} type="movie" client:visible />
          ))
        }
      </div>
    </div>
  </div>

  <section class="mb-8">
    <div class="bg-gray-800 p-6 rounded-lg shadow-lg">
      <h2 class="text-2xl font-bold mb-6 text-primary-400">
        ðŸ”¥ Series Populares (React Components)
      </h2>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          popularTVShows.map((show) => (
            <MovieCard item={show} type="tv" client:visible />
          ))
        }
      </div>
    </div>
  </section>

  <section class="mb-8">
    <FrameworksDesc />
  </section>
</Layout>

<script>
  declare global {
    interface Window {
      watchlistStore: any;
    }
  }

  import('../lib/watchlistStore')
    .then(({ watchlistStore, WatchlistEvents }) => {
      WatchlistEvents.setupGlobalListeners();
      window.watchlistStore = watchlistStore;
    })
    .catch((error) => {
      alert('Error loading watchlist store:' + error);
    });
</script>
